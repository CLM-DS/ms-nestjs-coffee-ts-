branches: [
  {name: 'master'},  
  {name: 'develop', channel: 'develop', prerelease: 'dev'}, 
  {name: '(release)(\/[0-9A-Za-z-]+)', prerelease: 'rc'}, 
  {name: '(staging)(\/[0-9A-Za-z-]+)', prerelease: 'pre'}]
ci: true
debug: true
dryRun: false
tagFormat: '${version}'

# Global plugin options (will be passed to all plugins)
preset: 'conventionalcommits'
gitlabUrl: 'https://gitlab.com/' # your gitlab url
slackWebhook: 'https://hooks.slack.com/services/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'

# Responsible for verifying conditions necessary to proceed with the release:
# configuration is correct, authentication token are valid, etc...
verifyConditions:
  - '@semantic-release/changelog'
  - '@semantic-release/git'
  - '@semantic-release/gitlab'
  - '@semantic-release/exec'


# Responsible for determining the type of the next release (major, minor or patch).
# If multiple plugins with a analyzeCommits step are defined, the release type will be
# the highest one among plugins output.
# Look details at: https://github.com/semantic-release/commit-analyzer#configuration
analyzeCommits:
  - path: '@semantic-release/commit-analyzer'


verifyRelease:
  - path: '@semantic-release/exec'
    verifyReleaseCmd: 'echo ${nextRelease.version} > VERSION.txt'


# Responsible for generating the content of the release note.
# If multiple plugins with a generateNotes step are defined,
# the release notes will be the result of the concatenation of each plugin output.
generateNotes:
  - path: '@semantic-release/release-notes-generator'
    writerOpts:
      groupBy: 'type'
      commitGroupsSort: 'title'
      commitsSort: 'header'
    linkCompare: true
    linkReferences: true

# Responsible for preparing the release, for example creating or updating files
# such as package.json, CHANGELOG.md, documentation or compiled assets
# and pushing a commit.
prepare:
  - path: '@semantic-release/changelog'
  # - path: '@semantic-release/git'
  #   message: 'RELEASE: ${nextRelease.version}'
  #   assets: ['CHANGELOG.md']

# Responsible for publishing the release.
publish:
  - path: '@semantic-release/gitlab'

success: 
  - path: 'semantic-release-slack-bot'
    notifyOnSuccess: true
    markdownReleaseNotes: false

fail: 
  - path: 'semantic-release-slack-bot'
    notifyOnFail: true
